[
    {
        "question": "What is the size of 'int' in a 32-bit operating systems?",
        "A": "32 bits",
        "B": "32 Bytes",
        "C": "16 bits",
        "D": "16 Bytes",
        "answer": "A",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Basics", "Data types"],
        "language": ["C", "CPP", "Java", "Python"]
    },
    {
        "question": "Which loop is executed at least once?",
        "A": "for loop",
        "B": "while loop",
        "C": "do-while loop",
        "D": "None of the above",
        "answer": "C",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Basics", "Loops"],
        "language": ["C", "CPP", "Java"]
    },
    {
        "question": "Which is the correct way to declare a pure virtual function in C++?",
        "A": "virtual void func() abstract;",
        "B": "virtual void func() = 0;",
        "C": "abstract void func();",
        "D": "void func() = NULL;",
        "answer": "B",
        "level": "Advanced",
        "category": "Practical",
        "concept": ["OOPs", "Polymorphism"],
        "language": ["CPP"]
    },
    {
        "question": "In Python, what is the output of list1 = [1, 2, 3]; list2 = list1; list1[0] = 4; print(list2)?",
        "A": "[1, 2, 3]",
        "B": "[4, 2, 3]",
        "C": "Error",
        "D": "[4]",
        "answer": "B",
        "level": "Intermediate",
        "category": "Practical",
        "concept": ["References", "Lists"],
        "language": ["Python"]
    },
    {
        "question": "Which statement correctly creates a HashMap in Java?",
        "A": "HashMap<String, Integer> map = new HashMap();",
        "B": "Map<String, Integer> map = HashMap();",
        "C": "HashMap map = new HashMap<String, Integer>();",
        "D": "HashMap<String, Integer> map = new HashMap<>();",
        "answer": "D",
        "level": "Intermediate",
        "category": "Practical",
        "concept": ["Collections", "Generics"],
        "language": ["Java"]
    },
    {
        "question": "What is the correct way to free memory in C?",
        "A": "delete ptr;",
        "B": "free(ptr);",
        "C": "remove(ptr);",
        "D": "dealloc(ptr);",
        "answer": "B",
        "level": "Basic",
        "category": "Practical",
        "concept": ["Memory Management"],
        "language": ["C"]
    },
    {
        "question": "Which of these is not a feature of Python?",
        "A": "Dynamic typing",
        "B": "Pointer arithmetic",
        "C": "List comprehension",
        "D": "Multiple inheritance",
        "answer": "B",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Language Features"],
        "language": ["Python"]
    },
    {
        "question": "What is the output of sizeof(char) in C?",
        "A": "1",
        "B": "2",
        "C": "4",
        "D": "8",
        "answer": "A",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Data Types", "Memory"],
        "language": ["C", "CPP"]
    },
    {
        "question": "In Java, which is not a valid identifier?",
        "A": "_variable",
        "B": "$variable",
        "C": "123variable",
        "D": "variable123",
        "answer": "C",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Basics", "Syntax"],
        "language": ["Java"]
    },
    {
        "question": "What is the correct way to implement RAII in C++?",
        "A": "Using smart pointers",
        "B": "Using manual memory management",
        "C": "Using garbage collection",
        "D": "Using reference counting",
        "answer": "A",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Memory Management", "RAII"],
        "language": ["CPP"]
    },
    {
        "question": "Which statement about Python lists is correct?",
        "A": "Lists are immutable",
        "B": "Lists can only contain elements of the same type",
        "C": "Lists can contain elements of different types",
        "D": "Lists have a fixed size",
        "answer": "C",
        "level": "Basic",
        "category": "Theory",
        "concept": ["Data Structures", "Lists"],
        "language": ["Python"]
    },
    {
        "question": "What is the output of 5/2 in Java?",
        "A": "2.5",
        "B": "2",
        "C": "2.0",
        "D": "Error",
        "answer": "B",
        "level": "Basic",
        "category": "Practical",
        "concept": ["Operators", "Data Types"],
        "language": ["Java"]
    },
    {
        "question": "Which operator is used for pointer-to-member selection in C++?",
        "A": ".",
        "B": "->",
        "C": ".*",
        "D": "->*",
        "answer": "D",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Pointers", "Operators"],
        "language": ["CPP"]
    },
    {
        "question": "What is the correct way to open a file in append mode in Python?",
        "A": "open('file.txt', 'w')",
        "B": "open('file.txt', 'r')",
        "C": "open('file.txt', 'a')",
        "D": "open('file.txt', 'x')",
        "answer": "C",
        "level": "Basic",
        "category": "Practical",
        "concept": ["File Handling"],
        "language": ["Python"]
    },
    {
        "question": "Which collection in Java is thread-safe?",
        "A": "ArrayList",
        "B": "Vector",
        "C": "LinkedList",
        "D": "HashMap",
        "answer": "B",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Collections", "Threading"],
        "language": ["Java"]
    },
    {
        "question": "What is the purpose of volatile keyword in C?",
        "A": "To make variable thread-safe",
        "B": "To prevent optimization",
        "C": "To make variable constant",
        "D": "To increase performance",
        "answer": "B",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Keywords", "Memory"],
        "language": ["C", "CPP"]
    },
    {
        "question": "Which is not a valid decorator in Python?",
        "A": "@property",
        "B": "@staticmethod",
        "C": "@virtual",
        "D": "@classmethod",
        "answer": "C",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Decorators", "OOP"],
        "language": ["Python"]
    },
    {
        "question": "What is a correct way to prevent object copying in C++?",
        "A": "MyClass(const MyClass&) = delete;",
        "B": "MyClass(MyClass&) = 0;",
        "C": "private MyClass(const MyClass&);",
        "D": "virtual MyClass(const MyClass&);",
        "answer": "A",
        "level": "Advanced",
        "category": "Practical",
        "concept": ["OOP", "Copy Constructor"],
        "language": ["CPP"]
    },
    {
        "question": "In Java, what happens when an exception is not caught?",
        "A": "Program continues execution",
        "B": "Program terminates",
        "C": "Exception is automatically handled",
        "D": "Exception is ignored",
        "answer": "B",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Exception Handling"],
        "language": ["Java"]
    },
    {
        "question": "What is the difference between malloc() and calloc() in C?",
        "A": "malloc() allocates less memory",
        "B": "calloc() initializes memory to zero",
        "C": "malloc() is faster",
        "D": "No difference",
        "answer": "B",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Memory Management"],
        "language": ["C"]
    },
    {
        "question": "What will be the output of: for(int i=0; i<5; i++) { if(i==2) continue; print(i); }",
        "A": "0 1 2 3 4",
        "B": "0 1 3 4",
        "C": "0 1 2",
        "D": "1 2 3 4",
        "answer": "B",
        "level": "Basic",
        "category": "Practical",
        "concept": ["Control Flow", "Loops"],
        "language": ["C", "CPP", "Java", "Python"]
    },
    {
        "question": "Which statement about function/method overloading is correct?",
        "A": "It depends on return type",
        "B": "It depends on parameter types or number",
        "C": "It depends on function name",
        "D": "It depends on access modifiers",
        "answer": "B",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["OOPs", "Polymorphism"],
        "language": ["CPP", "Java"]
    },
    {
        "question": "What is the correct way to handle multiple exceptions?",
        "A": "Using multiple try blocks",
        "B": "Using multiple catch blocks",
        "C": "Using finally block",
        "D": "Using throw block",
        "answer": "B",
        "level": "Intermediate",
        "category": "Practical",
        "concept": ["Exception Handling"],
        "language": ["CPP", "Java", "Python"]
    },
    {
        "question": "Which of these is not a valid way to copy an array?",
        "A": "arr2 = arr1.copy()",
        "B": "arr2 = Arrays.copyOf(arr1, arr1.length)",
        "C": "memcpy(arr2, arr1, sizeof(arr1))",
        "D": "arr2 = &arr1",
        "answer": "D",
        "level": "Intermediate",
        "category": "Practical",
        "concept": ["Arrays", "Memory Management"],
        "language": ["C", "CPP", "Java", "Python"]
    },
    {
        "question": "What is the purpose of the 'super' keyword?",
        "A": "To access parent class members",
        "B": "To create new instance",
        "C": "To access static members",
        "D": "To access private members",
        "answer": "A",
        "level": "Basic",
        "category": "Theory",
        "concept": ["OOPs", "Inheritance"],
        "language": ["Java", "Python"]
    },
    {
        "question": "Which statement about abstract classes is false?",
        "A": "Can have constructors",
        "B": "Can have abstract methods",
        "C": "Can be instantiated directly",
        "D": "Can have implemented methods",
        "answer": "C",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["OOPs", "Abstraction"],
        "language": ["CPP", "Java"]
    },
    {
        "question": "What is the output of print(type(1/2))?",
        "A": "int",
        "B": "float",
        "C": "double",
        "D": "number",
        "answer": "B",
        "level": "Basic",
        "category": "Practical",
        "concept": ["Data Types", "Operators"],
        "language": ["Python"]
    },
    {
        "question": "Which collection maintains insertion order?",
        "A": "HashSet",
        "B": "TreeSet",
        "C": "LinkedHashSet",
        "D": "Set",
        "answer": "C",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Collections", "Data Structures"],
        "language": ["Java"]
    },
    {
        "question": "What is the purpose of the 'mutable' keyword in C++?",
        "A": "To modify const objects",
        "B": "To prevent inheritance",
        "C": "To allow multiple inheritance",
        "D": "To make variable thread-safe",
        "answer": "A",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Keywords", "Const Correctness"],
        "language": ["CPP"]
    },
    {
        "question": "Which statement about multithreading is correct?",
        "A": "Threads always execute in order",
        "B": "Threads share heap memory",
        "C": "Threads cannot communicate",
        "D": "Threads have separate heap memory",
        "answer": "B",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Multithreading", "Memory Management"],
        "language": ["C", "CPP", "Java", "Python"]
    },
    {
        "question": "What is the correct way to implement a singleton pattern?",
        "A": "Make constructor public",
        "B": "Use static instance and private constructor",
        "C": "Use multiple constructors",
        "D": "Make all methods static",
        "answer": "B",
        "level": "Advanced",
        "category": "Practical",
        "concept": ["Design Patterns", "OOPs"],
        "language": ["CPP", "Java", "Python"]
    },
    {
        "question": "Which sorting algorithm has the best average time complexity?",
        "A": "Bubble Sort",
        "B": "Quick Sort",
        "C": "Selection Sort",
        "D": "Insertion Sort",
        "answer": "B",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["Algorithms", "Time Complexity"],
        "language": ["C", "CPP", "Java", "Python"]
    },
    {
        "question": "What is true about function pointers?",
        "A": "Can point to variables",
        "B": "Can point to function addresses",
        "C": "Can point to objects",
        "D": "Cannot be null",
        "answer": "B",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Pointers", "Functions"],
        "language": ["C", "CPP"]
    },
    {
        "question": "Which statement about serialization is correct?",
        "A": "Only works with primitive types",
        "B": "Converts objects to byte stream",
        "C": "Cannot handle inheritance",
        "D": "Always creates deep copy",
        "answer": "B",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["Serialization", "IO"],
        "language": ["Java", "Python"]
    },
    {
        "question": "What is the purpose of virtual destructor?",
        "A": "For memory optimization",
        "B": "For proper cleanup in inheritance",
        "C": "For multiple inheritance",
        "D": "For exception handling",
        "answer": "B",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["OOPs", "Memory Management"],
        "language": ["CPP"]
    },
    {
        "question": "Which is not a valid file opening mode?",
        "A": "r+",
        "B": "w+",
        "C": "x+",
        "D": "e+",
        "answer": "D",
        "level": "Basic",
        "category": "Theory",
        "concept": ["File Handling"],
        "language": ["C", "CPP", "Python"]
    },
    {
        "question": "What is the output of: try { throw 20; } catch(int e) { print(e); }",
        "A": "Error",
        "B": "20",
        "C": "0",
        "D": "Nothing",
        "answer": "B",
        "level": "Intermediate",
        "category": "Practical",
        "concept": ["Exception Handling"],
        "language": ["CPP"]
    },
    {
        "question": "Which statement about interfaces is correct?",
        "A": "Can have implemented methods",
        "B": "Can have constructor",
        "C": "All methods are abstract",
        "D": "Can have private methods",
        "answer": "C",
        "level": "Intermediate",
        "category": "Theory",
        "concept": ["OOPs", "Interfaces"],
        "language": ["Java"]
    },
    {
        "question": "What is the purpose of __init__ method in Python?",
        "A": "To initialize class variables",
        "B": "To destroy objects",
        "C": "To create static methods",
        "D": "To inherit classes",
        "answer": "A",
        "level": "Basic",
        "category": "Theory",
        "concept": ["OOPs", "Constructors"],
        "language": ["Python"]
    },
    {
        "question": "Which operator is used for deep copy in C++?",
        "A": "=",
        "B": "copy()",
        "C": "clone()",
        "D": "Must be implemented manually",
        "answer": "D",
        "level": "Advanced",
        "category": "Theory",
        "concept": ["OOPs", "Memory Management"],
        "language": ["CPP"]
    }
]